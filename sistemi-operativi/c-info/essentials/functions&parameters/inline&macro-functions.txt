
Inline function:
    Info:
        An inline function is a normal function that is defined by the inline keyword.
        An inline function is a short function that is expanded by the compiler.
        And its arguments are evaluated only once. An inline functions are the short length functions that
        are automatically made the inline functions without using the inline keyword inside the class.
    Example:
        void inline test_inline_func1(int a, int b) {
            printf ("a=%d and b=%d\n", a, b);
        }

        int inline test_inline_func2(int x) {
            return x*x;
        }


Macro function:
    Info:
        It is also called preprocessors directive. The macros are defined by the #define keyword.
        Before the program compilation, the preprocessor examines the program whenever the preprocessor detects
        the macros then preprocessor replaces the macro by the macro definition.
    Examples:
        #define SWAP(a,b)({a ^= b; b ^= a; a ^= b;})
        #define SQUARE(x) (x*x)

    Conditiona Macros:
        Example:
            #ifdef PRJ_REL_01
            ..
            .. code of REL 01 ..
            ..
            #else
            ..
            .. code of REL 02 ..
            ..
            #endif